{"version":3,"sources":["config/theme.js","navelicious/core/ThemeContext.js","navelicious/components/Navbar/Navbar.js","navelicious/components/Slider/Slider.js","navelicious/components/NavbarSection/NavbarSection.js","navelicious/components/NavbarCustomSection/NavbarCustomSection.js","navelicious/core/CreatePortal.js","navelicious/components/NavbarItem/NavbarItem.js","navelicious/components/HeadingLink/HeadingLink.js","navelicious/components/Heading/Heading.js","navelicious/components/DropdownContent/DropdownContent.js","navelicious/components/LinkList/LinkList.js","components/NavExample.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","primary","secondary","navBg","ThemeContext","React","createContext","ThemeProvider","Provider","ThemeConsumer","Consumer","NavbarEl","styled","div","_templateObject","props","justify","background","Navbar","_ref","children","className","react_default","a","createElement","value","defaultProps","SliderEl","Slider_templateObject","NavbarListContainer","_templateObject2","width","NavbarList","ul","_templateObject3","BackArrow","_templateObject4","color","NextArrow","_templateObject5","LeftArrow","goToPrevSlide","onClick","xmlns","viewBox","d","RightArrow","_ref2","goToNextSlide","Slider","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getArrows","sliderWidth","sliderRef","current","getBoundingClientRect","document","getElementsByClassName","setState","arrows","getNavbarListContainerWidth","sliderArrowLeft","sliderArrowRight","navbarListContainerWidth","offsetWidth","setTimeout","state","currentIndex","translateValue","prevState","slideWidth","right","index","querySelector","concat","clientWidth","createRef","navbarListRef","numberOfChildren","prevProps","Children","count","window","addEventListener","removeEventListener","_this2","context","innerRef","Slider_LeftArrow","arrowsColor","style","transform","transition","Slider_RightArrow","Component","NavbarSectionEl","section","NavbarSection_templateObject","FlipperEl","Flipper","NavbarSection_templateObject2","NavbarSection","activeIndices","animatingOut","inDropdown","resetDropdownState","animatingOutTimeout","onMouseEnter","i","length","clearTimeout","onMouseEnterDropdown","onMouseLeave","duration","onMouseLeaveDropdown","onMouseEnterLink","_this$props","ease","dropdownBackground","titleColor","activeColor","tweenConfig","map","child","cloneElement","link","assign","flipKey","id","Slider_Slider","NavbarCustomSectionEL","NavbarCustomSection_templateObject","NavbarCustomSection","CreatePortal","overlayContainer","getElementById","appendChild","removeChild","ReactDOM","createPortal","NavbarItemEl","li","NavbarItem_templateObject","NavbarItemTitle","button","NavbarItem_templateObject2","active","NavbarItemLink","NavbarItem_templateObject3","DropdownSlot","NavbarItem_templateObject4","DropdownRoot","NavbarItem_templateObject5","topPos","leftPos","Caret","_templateObject6","DropdownBackground","_templateObject7","NavbarItem","_this$setState","itemleftPos","navbarItemRef","left","itemCenterPos","itemHeight","height","childOffsetLeft","defineProperty","nextProps","nextState","title","linkTo","href","Fragment","onFocus","core_CreatePortal","es","flipId","inverseFlipId","scale","h3","HeadingLink_templateObject","noMarginBottom","withComponent","HeadingEl","Heading_templateObject","Heading","DropdownContentEl","DropdownContent_templateObject","padding","DropdownContent","LinkList_templateObject","marginLeft","SiteContainer","NavExample_templateObject","NavbarContainer","NavExample_templateObject2","Logo","NavExample_templateObject3","NavExample_templateObject4","NavExample","NavExample_NavbarEl","components_NavbarCustomSection_NavbarCustomSection","components_NavbarSection_NavbarSection","components_NavbarItem_NavbarItem","console","log","injectGlobal","App_templateObject","App","styled_components_browser_esm","components_NavExample","Boolean","location","hostname","match","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c957daf0.chunk.js","sourcesContent":["const theme = {\n  primary: \"#FD2952\",\n  secondary: \"#766fc1\",\n  navBg: \"#25263e\"\n};\n\nexport default theme;\n","import React from 'react';\n\nconst ThemeContext = React.createContext({});\n\nexport const ThemeProvider = ThemeContext.Provider;\nexport const ThemeConsumer = ThemeContext.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { ThemeProvider } from \"../../core/ThemeContext\";\n\nconst NavbarEl = styled.div`\n  display: flex;\n  justify-content: ${props => props.justify};\n  background: ${props => props.background};\n  z-index: 999;\n`;\n\nconst Navbar = ({ children, justify, background, className }) => (\n  <ThemeProvider value={{ background: background }}>\n    <NavbarEl justify={justify} background={background} className={className}>\n      {children}\n    </NavbarEl>\n  </ThemeProvider>\n);\n\nNavbar.defaultProps = {\n  justify: \"center\",\n  background: \"#E8E8E8\"\n};\n\nNavbar.propTypes = {\n  /* Mouse leave duration in ms */\n  background: PropTypes.string,\n  justify: PropTypes.string\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeConsumer } from \"../../core/ThemeContext\";\n\nconst SliderEl = styled.div`\n  background: ${props => props.background};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  .prev,\n  .next {\n    margin: 0 auto;\n    cursor: pointer;\n    transition: 0.6s ease;\n    width: 20px;\n    height: 20px;\n    position: relative;\n    z-index: 1;\n\n    > div {\n      align-items: center;\n      line-height: 1;\n      width: 14px;\n      height: 14px;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n  .prev:hover,\n  .next:hover {\n    color: white;\n  }\n`;\n\nconst NavbarListContainer = styled.div`\n  width: ${props => props.width}px;\n  overflow-x: hidden;\n`;\n\nconst NavbarList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  align-items: center;\n  white-space: nowrap;\n  /* IE 11 needs this inline block :( */\n  display: inline-block;\n\n  li {\n    display: inline-flex;\n  }\n`;\n\nconst BackArrow = styled.div`\n  background: ${props => props.background};\n  z-index: 9999;\n\n  path {\n    fill: ${props => props.color};\n  }\n`;\n\nconst NextArrow = styled.div`\n  background: ${props => props.background};\n\n  path {\n    fill: ${props => props.color};\n  }\n`;\n\nconst LeftArrow = ({ goToPrevSlide, background, color }) => {\n  return (\n    <BackArrow\n      className=\"prev\"\n      onClick={goToPrevSlide}\n      background={background}\n      color={color}\n    >\n      <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 129 129\">\n          <path d=\"m88.6,121.3c0.8,0.8 1.8,1.2 2.9,1.2s2.1-0.4 2.9-1.2c1.6-1.6 1.6-4.2 0-5.8l-51-51 51-51c1.6-1.6 1.6-4.2 0-5.8s-4.2-1.6-5.8,0l-54,53.9c-1.6,1.6-1.6,4.2 0,5.8l54,53.9z\" />\n        </svg>\n      </div>\n    </BackArrow>\n  );\n};\n\nconst RightArrow = ({ goToNextSlide, background, color }) => {\n  return (\n    <NextArrow\n      className=\"next\"\n      onClick={goToNextSlide}\n      background={background}\n      color={color}\n    >\n      <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 129 129\">\n          <path d=\"m40.4,121.3c-0.8,0.8-1.8,1.2-2.9,1.2s-2.1-0.4-2.9-1.2c-1.6-1.6-1.6-4.2 0-5.8l51-51-51-51c-1.6-1.6-1.6-4.2 0-5.8 1.6-1.6 4.2-1.6 5.8,0l53.9,53.9c1.6,1.6 1.6,4.2 0,5.8l-53.9,53.9z\" />\n        </svg>\n      </div>\n    </NextArrow>\n  );\n};\n\nexport default class Slider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sliderRef = React.createRef();\n    this.navbarListRef = React.createRef();\n\n    this.state = {\n      arrows: true,\n      currentIndex: 0,\n      translateValue: 0,\n      numberOfChildren: 0,\n      sliderWidth: 0,\n      navbarListContainerWidth: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.getArrows();\n    }\n  }\n\n  componentDidMount() {\n    // count number of children\n    const numberOfChildren = React.Children.count(this.props.children);\n\n    this.setState({\n      numberOfChildren: numberOfChildren\n    });\n\n    this.getArrows();\n    this.getNavbarListContainerWidth();\n    window.addEventListener(\"resize\", this.getArrows);\n    window.addEventListener(\"resize\", this.getNavbarListContainerWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.getArrows);\n    window.removeEventListener(\"resize\", this.getNavbarListContainerWidth);\n  }\n\n  getArrows = () => {\n    const sliderWidth =\n      this.sliderRef.current.getBoundingClientRect().width || 0;\n    const navbarListWidth = document\n      .getElementsByClassName(\"navelicious-navbar-list\")[0]\n      .getBoundingClientRect().width;\n\n    if (navbarListWidth <= sliderWidth) {\n      this.setState({\n        arrows: false\n      });\n    } else {\n      this.setState({\n        arrows: true\n      });\n    }\n  };\n\n  getNavbarListContainerWidth = () => {\n    const sliderRef = this.sliderRef.current;\n    const sliderArrowLeft = sliderRef.getElementsByClassName(\"prev\")[0] || 0;\n    const sliderArrowRight = sliderRef.getElementsByClassName(\"next\")[0] || 0;\n\n    /* \n    first I'm setting the navbarListContainerWidth to Zero because if I try to resize it gets the previous size. \n    So, if I try to resize the window to a smaller positon it always get the current size and never gets\n    below that. \n    To solve this, I'm setting the width to zero so I can actualy get the real size of the container.\n    */\n    this.setState({\n      navbarListContainerWidth: 0\n    });\n\n    const navbarListContainerWidth =\n      sliderRef.offsetWidth -\n      (sliderArrowLeft.offsetWidth + sliderArrowRight.offsetWidth);\n\n    /* \n    As you might have noticed the state was first set to zero. \n    After that I could get the real size of the navbarlistWith and\n    now I can apply it. It need a setTimeout do first get the zero\n    */\n    setTimeout(() => {\n      this.setState({\n        navbarListContainerWidth: navbarListContainerWidth\n      });\n    }, 1000);\n  };\n\n  goToPrevSlide = () => {\n    // Exiting the method early if we are at the end of the images array.\n    // We also want to reset currentIndex and translateValue, so we return\n    // to the first image in the array.\n    if (this.state.currentIndex === 0) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      });\n    }\n\n    // This will not run if we met the if condition above\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      translateValue:\n        prevState.translateValue + this.slideWidth(prevState.currentIndex - 1)\n    }));\n  };\n\n  goToNextSlide = () => {\n    /* \n    if last item rigt position is less than right side of container I'm in the end of the slider\n    After that when I click the arrow I want to go back to position 0. So I want to set the \n    state translateValue to 0 \n    */\n    const sliderArrowRight =\n      this.sliderRef.current.getBoundingClientRect().right || 0;\n\n    const navList = document\n      .getElementsByClassName(\"navelicious-navbar-list\")[0]\n      .getBoundingClientRect().right;\n\n    if (navList <= sliderArrowRight) {\n      return this.setState({\n        currentIndex: 0,\n        translateValue: 0\n      });\n    }\n\n    // This will not run if we met the if condition above\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1,\n      translateValue:\n        prevState.translateValue + -this.slideWidth(prevState.currentIndex)\n    }));\n  };\n\n  slideWidth = index => {\n    // this method calculates the width of the current slide, and then returns it to us.\n    return document.querySelector(`.navelicious-slide${index}`).clientWidth;\n  };\n\n  render() {\n    const { children } = this.props;\n    const { arrows } = this.state;\n\n    return (\n      <ThemeConsumer>\n        {context => (\n          <SliderEl innerRef={this.sliderRef} background={context.background}>\n            {arrows && (\n              <LeftArrow\n                goToPrevSlide={this.goToPrevSlide}\n                background={context.background}\n                color={context.arrowsColor}\n              />\n            )}\n\n            <NavbarListContainer width={this.state.navbarListContainerWidth}>\n              <NavbarList\n                className=\"navelicious-navbar-list\"\n                style={{\n                  transform: `translateX(${this.state.translateValue}px)`,\n                  transition: \"transform ease-out 0.45s\"\n                }}\n              >\n                {children}\n              </NavbarList>\n            </NavbarListContainer>\n            {arrows && (\n              <RightArrow\n                goToNextSlide={this.goToNextSlide}\n                background={context.background}\n                color={context.arrowsColor}\n              />\n            )}\n          </SliderEl>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Flipper } from 'react-flip-toolkit';\nimport { ThemeProvider } from '../../core/ThemeContext';\nimport Slider from '../Slider/Slider';\n\nconst NavbarSectionEl = styled.section`\n  margin: auto;\n  width: 100%;\n  position: relative;\n`;\n\nconst FlipperEl = styled(Flipper)`\n  display: flex;\n  flex: 1;\n  position: relative;\n`;\n\nclass NavbarSection extends Component {\n  state = {\n    activeIndices: [],\n    animatingOut: false,\n    inDropdown: false\n  };\n\n  resetDropdownState = () => {\n    this.setState({\n      activeIndices: [],\n      animatingOut: false,\n      inDropdown: false\n    });\n    delete this.animatingOutTimeout;\n  };\n\n  onMouseEnter = i => {\n    if (this.state.activeIndices[this.state.activeIndices.length - 1] === i)\n      return;\n    if (this.animatingOutTimeout) {\n      clearTimeout(this.animatingOutTimeout);\n      this.resetDropdownState();\n    }\n    this.setState(prevState => ({\n      activeIndices: prevState.activeIndices.concat(i),\n      animatingOut: false,\n      inDropdown: false\n    }));\n  };\n\n  onMouseEnterDropdown = i => {\n    if (this.state.activeIndices[this.state.activeIndices.length - 1] === i)\n      return;\n    if (this.animatingOutTimeout) {\n      clearTimeout(this.animatingOutTimeout);\n      this.resetDropdownState();\n    }\n    this.setState(prevState => ({\n      activeIndices: prevState.activeIndices.concat(i),\n      animatingOut: false,\n      inDropdown: true\n    }));\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      animatingOut: true\n    });\n\n    this.animatingOutTimeout = setTimeout(\n      this.resetDropdownState,\n      this.props.duration\n    );\n  };\n\n  onMouseLeaveDropdown = () => {\n    this.setState({\n      animatingOut: true\n    });\n\n    if (this.state.animatingOut) {\n      this.animatingOutTimeout = setTimeout(\n        this.resetDropdownState,\n        this.props.duration\n      );\n    }\n  };\n\n  onMouseEnterLink = () => {\n    this.setState({\n      animatingOut: true\n    });\n    this.animatingOutTimeout = setTimeout(\n      this.resetDropdownState,\n      this.props.duration\n    );\n  };\n\n  render() {\n    const {\n      duration,\n      ease,\n      dropdownBackground,\n      titleColor,\n      activeColor,\n      className,\n      arrowsColor\n    } = this.props;\n\n    const tweenConfig = {\n      duration: duration,\n      ease: ease\n    };\n\n    const currentIndex = this.state.activeIndices[\n      this.state.activeIndices.length - 1\n    ];\n\n    // copy props from parent to the children\n    const children = React.Children.map(this.props.children, (child, index) => {\n      return React.cloneElement(child, {\n        index: index,\n        currentIndex,\n        link: child.props.link,\n        onMouseEnter: this.onMouseEnter,\n        onMouseEnterLink: this.onMouseEnterLink,\n        onMouseEnterDropdown: this.onMouseEnterDropdown,\n        onMouseLeave: this.onMouseLeave,\n        onMouseLeaveDropdown: this.onMouseLeaveDropdown\n      });\n    });\n\n    return (\n      <FlipperEl flipKey={currentIndex} {...tweenConfig} className={className}>\n        <ThemeProvider\n          value={{\n            arrowsColor: arrowsColor,\n            activeColor: activeColor,\n            titleColor: titleColor,\n            dropdownBackground: dropdownBackground\n          }}\n        >\n          <NavbarSectionEl\n            id=\"navelicious-section\"\n            onMouseLeave={this.onMouseLeave}\n          >\n            <Slider>{children}</Slider>\n          </NavbarSectionEl>\n        </ThemeProvider>\n      </FlipperEl>\n    );\n  }\n}\n\nNavbarSection.defaultProps = {\n  duration: 500,\n  ease: 'easeOutExpo',\n  activeColor: 'red',\n  titleColor: 'green',\n  dropdownBackground: 'white',\n  animatingOut: false\n};\n\nNavbarSection.propTypes = {\n  duration: PropTypes.number,\n  ease: PropTypes.string,\n  dropdownBackground: PropTypes.string,\n  activeColor: PropTypes.string,\n  titleColor: PropTypes.string,\n  animatingOut: PropTypes.bool\n};\n\nexport default NavbarSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst NavbarCustomSectionEL = styled.section`\n  display: flex;\n  justify-content: ${props => props.justify};\n  align-items: center;\n`;\n\nconst NavbarCustomSection = ({ children, justify }) => (\n  <NavbarCustomSectionEL justify={justify}>{children}</NavbarCustomSectionEL>\n);\n\nNavbarCustomSection.defaultProps = {\n  justify: 'center'\n};\n\nNavbarCustomSection.propTypes = {\n  justify: PropTypes.string\n};\n\nexport default NavbarCustomSection;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass CreatePortal extends React.Component {\n  constructor(props) {\n    super(props);\n    // Create container DOM element and append to DOM.\n    this.overlayContainer = document.createElement('div');\n    document\n      .getElementById('navelicious-section')\n      .appendChild(this.overlayContainer);\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById('navelicious-section')\n      .removeChild(this.overlayContainer);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      <div>\n        <div>{this.props.children}</div>\n      </div>,\n      this.overlayContainer\n    );\n  }\n}\n\nexport default CreatePortal;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Flipped } from 'react-flip-toolkit';\nimport CreatePortal from '../../core/CreatePortal';\nimport { ThemeConsumer } from '../../core/ThemeContext';\n\nconst NavbarItemEl = styled.li`\n  position: relative;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n`;\n\nconst NavbarItemTitle = styled.button`\n  background-color: transparent;\n  font-family: inherit;\n  font-weight: normal;\n  border: none;\n  font-size: 16px;\n  padding: 10px 20px;\n  color: ${props => (props.active ? props.activeColor : props.titleColor)};\n  display: flex;\n  justify-content: center;\n  transition: opacity 250ms;\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  &:hover {\n    opacity: 0.7;\n    outline: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NavbarItemLink = styled.a`\n  font-family: inherit;\n  font-weight: normal;\n  font-size: 16px;\n  padding: 10px 20px;\n  color: ${props => (props.active ? props.activeColor : props.titleColor)};\n  display: flex;\n  justify-content: center;\n  transition: opacity 250ms;\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  text-decoration: none;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst DropdownSlot = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  perspective: 1500px;\n  z-index: 9;\n`;\n\nconst DropdownRoot = styled.div`\n  transform-origin: 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: ${props => props.topPos}px;\n  left: ${props => props.leftPos}px;\n  width: 300px;\n  /* background: red; */\n`;\n\nconst Caret = styled.div`\n  width: 0;\n  height: 0;\n  border-width: 10px;\n  border-style: solid;\n  border-color: transparent transparent ${props => props.dropdownBackground};\n  /* make sure it's above the main dropdown container so now box-shadow bleeds over it */\n  z-index: 1;\n  position: relative;\n  /* prevent any gap in between caret and main dropdown */\n  top: 1px;\n  margin-top: -10px;\n`;\n\nconst DropdownBackground = styled.div`\n  transform-origin: 0 0;\n  background-color: ${props => props.dropdownBackground};\n  border-radius: 4px;\n  overflow: hidden;\n  min-width: 300px;\n  min-height: 200px;\n  max-height: 300px;\n  overflow-y: auto;\n  box-shadow: 0 50px 100px rgba(50, 50, 93, 0.1),\n    0 15px 35px rgba(50, 50, 93, 0.15), 0 5px 15px rgba(0, 0, 0, 0.1);\n`;\n\nclass NavbarItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      leftPos: 0,\n      topPos: 0\n    };\n\n    this.navbarItemRef = React.createRef();\n  }\n\n  onMouseEnterDropdown = () => {\n    this.props.onMouseEnterDropdown(this.props.index);\n  };\n\n  onMouseEnter = () => {\n    this.props.onMouseEnter(this.props.index);\n\n    const itemleftPos = this.navbarItemRef.current.getBoundingClientRect().left;\n    const itemCenterPos =\n      this.navbarItemRef.current.getBoundingClientRect().width / 2;\n    const itemHeight = this.navbarItemRef.current.getBoundingClientRect()\n      .height;\n\n    // parentPos starts on arrow prev right pos\n    const parentPosLeft =\n      document.getElementById('navelicious-section').getBoundingClientRect()\n        .left || 0;\n\n    /* \n    Because absolute position is relative to the parent I get\n    the left position by subtracting the position left of the item\n    less the parent left position.\n    The element gets to the left of the item so I need to center it,\n    by adding half width of the item and half width of the DropdownRoot (300/2)\n    */\n    const childOffsetLeft = itemleftPos - parentPosLeft + itemCenterPos - 150;\n\n    /*\n    The top positon of the dropwond is the height of the hovered item \n    */\n    this.setState({\n      [`leftPos${this.props.index}`]: childOffsetLeft,\n      [`topPos${this.props.index}`]: itemHeight\n    });\n  };\n\n  onMouseEnterLink = () => {\n    this.props.onMouseEnter(this.props.index);\n  };\n\n  onMouseLeave = () => {\n    this.props.onMouseLeave(this.props.index);\n  };\n\n  onMouseLeaveDropdown = () => {\n    this.props.onMouseLeaveDropdown(this.props.index);\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.currentIndex !== nextProps.currentIndex;\n  }\n\n  render() {\n    const {\n      currentIndex,\n      title,\n      children,\n      index,\n      onClick,\n      linkTo,\n      titleColor,\n      className,\n      active\n    } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {context => (\n          <NavbarItemEl className={className}>\n            {linkTo ? (\n              <NavbarItemLink\n                href={linkTo}\n                onMouseEnter={this.onMouseEnterLink}\n                activeColor={context.activeColor}\n                titleColor={titleColor}\n                className={`navelicious-slide${index}`}\n                innerRef={this.navbarItemRef}\n                active={active}\n              >\n                {title}\n              </NavbarItemLink>\n            ) : (\n              <React.Fragment>\n                <NavbarItemTitle\n                  onMouseEnter={this.onMouseEnter}\n                  onFocus={this.onMouseEnter}\n                  onClick={onClick}\n                  activeColor={context.activeColor}\n                  titleColor={context.titleColor}\n                  className={`navelicious-slide${index}`}\n                  innerRef={this.navbarItemRef}\n                  active={active}\n                >\n                  <React.Fragment>{onClick && title}</React.Fragment>\n                  <React.Fragment>{!onClick && title}</React.Fragment>\n                </NavbarItemTitle>\n                {currentIndex === index &&\n                  !onClick && (\n                    <DropdownSlot>\n                      <CreatePortal>\n                        <DropdownRoot\n                          leftPos={this.state[`leftPos${currentIndex}`]}\n                          topPos={this.state[`topPos${currentIndex}`]}\n                          onMouseEnter={this.onMouseEnterDropdown}\n                          // onMouseLeave={this.onMouseLeaveDropdown}\n                        >\n                          <Flipped flipId=\"dropdown-caret\">\n                            <Caret\n                              dropdownBackground={context.dropdownBackground}\n                            />\n                          </Flipped>\n                          <Flipped flipId=\"dropdown\">\n                            <DropdownBackground\n                              dropdownBackground={context.dropdownBackground}\n                            >\n                              <Flipped inverseFlipId=\"dropdown\" scale>\n                                {children}\n                              </Flipped>\n                            </DropdownBackground>\n                          </Flipped>\n                        </DropdownRoot>\n                      </CreatePortal>\n                    </DropdownSlot>\n                  )}\n              </React.Fragment>\n            )}\n          </NavbarItemEl>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\nNavbarItem.defaultProps = {\n  active: false\n};\n\nNavbarItem.propTypes = {\n  active: PropTypes.bool\n};\n\nexport default NavbarItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Heading = styled.h3`\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 1.1rem;\n  margin-top: 0;\n  margin-bottom: ${props => (props.noMarginBottom ? 0 : '1rem')};\n  color: ${({ color }) => (color ? `var(--${color})` : 'var(--blue)')};\n`;\n\nconst HeadingLinkEl = Heading.withComponent('li');\n\nconst HeadingLink = ({ chilren }) => <HeadingLinkEl>{chilren}</HeadingLinkEl>;\n\nexport default HeadingLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst HeadingEl = styled.h3`\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 1.1rem;\n  margin-top: 0;\n  margin-bottom: ${props => (props.noMarginBottom ? 0 : '1rem')};\n  color: ${({ color }) => (color ? `red` : 'var(--blue)')};\n`;\n\nconst Heading = ({ children, color }) => (\n  <HeadingEl color={color}>{children}</HeadingEl>\n);\n\nHeading.defaultProps = {\n  color: '#000'\n};\n\nHeading.propTypes = {\n  color: PropTypes.string\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst DropdownContentEl = styled.div`\n  width: ${({ width }) => `${width}`};\n  padding: ${props => props.padding};\n`;\n\nconst DropdownContent = ({ width, children, padding }) => {\n  return (\n    <DropdownContentEl width={width} padding={padding}>\n      {children}\n    </DropdownContentEl>\n  );\n};\n\nDropdownContent.defaultProps = {\n  width: '100px',\n  padding: '5px'\n};\n\nDropdownContent.propTypes = {\n  justify: PropTypes.string,\n  padding: PropTypes.string\n};\n\nexport default DropdownContent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LinkListEl = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  li {\n    margin-bottom: 1rem;\n  }\n\n  li:last-of-type {\n    margin-bottom: 0;\n  }\n\n  text-decoration: none;\n  color: #6772e5;\n\n  margin-left: ${props => (props.marginLeft ? props.marginLeft : 0)};\n`;\n\nconst LinkList = ({ marginLeft }) => (\n  <LinkListEl marginLeft={marginLeft}>\n    <li>\n      <a href=\"/\">Stripe Atlas &rsaquo;</a>\n    </li>\n    <li>\n      <a href=\"/\">Stripe Home &rsaquo;</a>\n    </li>\n    <li>\n      <a href=\"/\">Improved Fraud Detection &rsaquo;</a>\n    </li>\n  </LinkListEl>\n);\n\nexport default LinkList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  Navbar,\n  NavbarSection,\n  NavbarItem,\n  NavbarCustomSection\n} from \"../navelicious\";\n\nconst SiteContainer = styled.div`\n  background: ${props => props.theme.secondary};\n  height: 400px;\n  padding: 40px;\n`;\n\nconst NavbarContainer = styled.div`\n  background: #25263e;\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nconst Logo = styled.div`\n  background-color: ${props => props.theme.primary};\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin: 20px;\n`;\n\nconst NavbarEl = styled(Navbar)`\n  background: ${props => props.theme.navBg};\n`;\n\nconst NavExample = () => {\n  const logHello = () => {\n    console.log(\"Hello!\");\n  };\n\n  return (\n    <SiteContainer>\n      <h1>Hi people</h1>\n      <NavbarContainer>\n        <NavbarEl justify=\"space-between\">\n          <NavbarCustomSection>\n            <Logo />\n          </NavbarCustomSection>\n          <NavbarSection\n            ease=\"easeOutExpo\"\n            duration={500}\n            dropdownBackground=\"white\"\n            titleColor=\"white\"\n            arrowsColor=\"white\"\n          >\n            <NavbarItem title=\"Products\">\n              <h1>Yep</h1>\n            </NavbarItem>\n            <NavbarItem title=\"Developers\">\n              <h1>Yep</h1>\n            </NavbarItem>\n            <NavbarItem title=\"Company\">\n              <h1>Yep</h1>\n            </NavbarItem>\n\n            <NavbarItem title=\"On Click\" onClick={logHello} />\n            <NavbarItem title=\"Link A\" linkTo=\"/\" />\n            <NavbarItem title=\"A very long Link\" linkTo=\"/\" />\n            <NavbarItem title=\"Example\">\n              <h1>Yep</h1>\n            </NavbarItem>\n            <NavbarItem title=\"this another very long Link\" linkTo=\"/\" />\n          </NavbarSection>\n        </NavbarEl>\n      </NavbarContainer>\n    </SiteContainer>\n  );\n};\n\nexport default NavExample;\n","import React from \"react\";\nimport { injectGlobal, ThemeProvider } from \"styled-components\";\nimport theme from \"./config/theme\";\nimport NavExample from \"./components/NavExample\";\n\ninjectGlobal`\n@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600');\n\n  body {\n    font-family: 'Source Sans Pro', Arial, Helvetica, sans-serif;\n  }\n`;\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <NavExample />\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}